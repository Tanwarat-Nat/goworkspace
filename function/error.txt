error is just normal value คือ error ที่เกิดขึ้นมามันก็ตือ valueๆ นึงที่เราสามารถเอาไป
ปู้ยี้ปู้ยำในโปรแกรมของเราได้ เราจะใส่ไว้ใน control flow ตัวไหนก็ได้ เราจจะใช้ if else
มาจับ เราจะโยกย้าย เปลี่ยนแปลง error ยังไงก็ได้

go ต้องการให้โปรแกรมเมอร์เข้ามามีส่วนร่วมในการจัดการ error ตรงนี้ ทำให้โปรแกรม
ดูง่ายขึ้น เวลาเกิดปัญหาอะไร เวลาขึ้นโปรดักชั่นแล้วเกิด error จริงๆ เราเป็นคนที่คอนโทรล
โปรแกรมได้ว่า เห้ยเกิด error ขึ้นมาเนี่ยมันหมายความว่ายังไง ทำให้การ diagnosis
ของเราเป็นไปได้ง่ายขึ้น ถ้าเราเขียน error ออกมาดี ก็คือเป็นการวางแผนในอนาคตตั้งแต่เนิ่นๆ

case senario นึง เวลาเราอ่านไฟล์ขึ้นมาความเป็นไปได้มี 2 อย่างคือ อ่านสำเร็จกับไม่สำเร็จ
ถ้าเป็นเคสการอ่านสำเร็จก็โอเคไม่มีปัญหาทุกคน happy เราใช้ข้อมูลจากไฟล์เอาไปส่งเข้าใน
logic ถัดๆไปในโปรแกรมของเราได้

ในเคสที่ไฟล์อ่านไม่ได้ จะเกิดอะไรขึ้น เราจะโทรลเลยมัย เราจะหยุดการทำงานตรงนี้เลยมั้ย
จำเป็นรึเปล่าที่จะหยุดการทำงานของโปรเเกรม กับไอ้แค่อ่านไฟล์ไม่ได้ คำถามคือทำไมไฟล์มันอ่านไม่ได้
เราควบคุมไม่ได้หรอ อาจจะไม่ได้นะ เช่นถ้าไฟล์ตรงนี้มันถูกสร้างไว้ที่ temperary floder
os สามารถที่จะลบไฟล์ขยะพวกนี้จาก temporary floder เมื่อไหร่ก็ได้ หรือถ้าไฟล์นี้
ถูกใส่ไว้ในที่ directory ใน hard disk ที่ไหนสักที่นึงแล้วมันมีโปรแกรมอันอื่นเช่น
มี integration ตัวอื่นที่ทำการ move ไฟล์ตัวนี้แล้วเอาไฟล์ตัวนี้ไปไว้แตาละที่ต่างกัน
แล้วถ้าไฟล์ตัวนี้ไม่อยู่ แล้วโปรแกรมเราดันไปอ่าน มันก็จะเกิด error ขึ้นมาแล้วเราจะ
handle ตัวนี้ได้ยังไง

error มีอยู่ 2 ประเภทหลักๆ
1. Programmer can control
- program logic
- business logic ex. ถอนเงินมากกว่าที่มีอยู่แล้วมันจะเกิดอะไรขึ้น
- control flow

2.Programmer cannot control
- I/O operations
- out of memory เมมเต็ม ใช้โปรแกรมเยอะเกิน เซอเวอถูกดึงเยอะเกิน
- network connection ไฟดับ ฟ้าถล่ม ดินทลาย
- power outage
- devices melt down device พัง

ฉะนั้นเวลาเกิด error เราจะต้องมาวิเคราะห์ว่าเราจะ log ออกมาได้ยังไง
เราจะเขียน error อแอกมาได้ยังไง ให้มันอ่านง่าย ให้เวลาซัพพอร์ตเข้ามาอ่าน
แล้วอ๋ออ error ตรงนี้นะ แก้ตรงนี้ๆๆ เราโค้ดสำหรับคนอื่นด้วย ทีมด้วย

best practice
1.not capitalize - เวลาเขียน error อย่าเขียนตัวใหญ่
2.avoid newline  -ไม่ต้องขึ้นบรรทัดใหม่

วิธีการ handle error
propagate error
retry
stop pregram gracefully
reduced functionalty
ignore error