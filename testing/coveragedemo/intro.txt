/*
เราเขียนโปรแกรม เขียนเทสเสร็จหมดแล้ว เราจะแน่ใจได้ยังไงว่าโค้ดส่วนไหนบ้างที่เทสไปแล้ว
และโค้ดส่วนไหนบ้างที่เรายังไม่ได้เทสอีก การมองแบบนี้เรียกว่า test coverage

ก็คือตัวบ่งชี้นึงว่าโปรแกรมของเราถูกเทสไปมากน้อยขนาดไหน สมมติว่ามีพันกว่าเทส
ทั้งพันเทสนั้นเทสแค่เซสชั่นเดียวของโค้ดที่เขียน เทสแค่ฟังก์ชั่นเดียวฟังก์ชั่นอื่นไม่ได้เทส
สมติว่ามี 2 ฟังก์ชั่น เทสฟังก์ชั่นเดียว อีกฟังกืชั่นไม่ได้เทส ไม่ว่าจะกี่พันกี่หมื่อนเทสเคสก็ตาม

สุดท้ายแล้วเราก้เทสแค่ 50% ของโปรแกรมนั้นๆเท่านั้นเอง จะดีกว่ามั้ยถ้าเราเพิ่มเปอร์เซ็นในการเทส
ในพื้นที่ทั้งหมดที่เราเขียน แต่ก็ใช่ว่าการมาดูจากว่าโค้ดส่วนไหนบ้างที่เราเทสไปแล้วมันจะเป็นตัวที่บ่งบอกได้ฃ
100%ก็ไม่เชิง เช่น

ในโปรแกรมจริง ในโปรแกรมที่รันอยู่บนโปรดักชั่นก็มีไรบาลี่อื่นๆมากมายที่เราไม่ได้เป็นคนเขียนเอง
เช่น external libary เวลาเราเรียกใช่ตรงนั้นเราก็ไม่รู้ว่า external libary ตรงนั้นเรา
เรียกใช้ได้ครบมั้ย เกิด inpyt parameter เปลี่ยนไป out put ที่ออกมาจะเป็นยังไง
แต่อย่างน้อยมันก้เป็นตัวบ่งชี้ว่าโค้ดของเรา ที่เราเขียนเองมัน cover มากน้อยขนาดไหน

และถึงแม้ว่าเราจะเทสโปรแกรมของเราทุกบรรทัดที่เราเขียนไป มันก็ไม้ได้เป็นตัวบ่งบอกและก็ไม่ได้
รับประกันว่าโปรแกรมของเราจะไม่มีบั๊ค เหมือนกับที่นักคอมฯท่านนึง บอกว่า การเทสโปรแกรม
มันทำได้มากที่สุดก็แค่โชว์ว่าโปรแกรมตรงนั้นมีบั๊ค แต่ไม่ได้หมายความว่าโปรแกรมนั้นไร้บี๊ค

เปรียบเทียบกับ หมอตรวจคนไข้พบว่ามีไข้สูงก้ส่งไปตรวจหาเชื้อไวรัส
บอกคนไข้ว่าพบไวรัส abc นะ ที่ทำให้ป่วย แต่นั่นไม่ได้หมายความว่า
จะไม่พบไวรัส xyz เพราะว่าตรวจหาแค่ไวรัส abc อย่างเดียว แต่ไม่ได้ตรวจ xyz
ไม่ได้หมายความว่าพอให้ยารักษาไวรัส abc แล้วไวรัส xyz จะหายไป

การที่เราเทสโปรแกรมเราเนี่ย ก็คือเรา prove ว่าโปรแกรมเรามีบั๊คแบบนี้นะ แล้วโปรแรกมเรา
handle ได้ เทสตรงนั้นเลยผ่าน ไม่ได้หมายความว่าโปรแกรมของเราจะสารมารถ handle เคสอื่น
ที่เราไม่ได้เทสได้


*/