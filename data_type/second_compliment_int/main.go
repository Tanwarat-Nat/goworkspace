package main

import (
	"fmt"
)

func main() {
	x := -5
	fmt.Printf("%b\n", x)

}

// 2(binary) 1,2,4,8,16,32,64,128,256
// ใช้ two's complement represent ค่าลบ

// Most significant(MSB)
//  5  = 0000 0101
// (ทำให้เป็นค่าลบ โดยเปลี่ยนเลขหน้าสุดเป็น 1)
// -5  = 1000 0101
// -10 = 1000 1010 ( 5 +(-5) ควรจะเป็น 0)

// One's Complement (1's Complement)
//  5  = 0000 0101
// -5  = 1111 1010
// (ทำให้เป็นค่าลบ โดยเปลี่ยนเลข 4 ตัวหน้าสุดเป็น 1111
// และกลับเลข 4 ตัวท้ายเป็นตรงกันข้าม)
// -0  = 1111 1111 (ไม่ม่ concept -0 ในคณิตศาสตร์)

// กราฟของ 1's Complement
// 0111 1111 (127)
//         1 (+ ไปอีก 1 bit)
// 1000 0000 (-127)
// จะได้ว่า 0.....127 -127... -0

// Two's Complement )2's Complement = 1's Complement + 1(bit)
//  5                 =  0000 0101
// -5 (1111 1010 + 1) =  1111 1011
//  0                 = 10000 0000 (ตัวที่เกินมาตัดทิ้งไปเลย)

// 126 ดูเลข binary -> 1's Complement + 1

// กราฟของ 2s' Complement
// คือ เอาเลข (-)127 + 1 = (-)128
// บวกเฉพาะตัวเลข ส่วน (-) เป็นแค่เครื่องหมาย คงที่ไว้เหมือนเดิม
// เลข binary ก็คงเดิม
// จะได้ว่า 0...127 -128 ... -1
